<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAA5I1RJtV/SN/Md0L+44xS//WdXf/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh//mi
        Yf/5omH/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB48LHQ
        eKSuyXkTAAAAAAAAAADTfUjqyHNA/+GLUf/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh//mi
        Yf/5omH/+aJh//miYf+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQ
        eP+x0Hj/sdB4/7HQeLQAAAAA5oRSH8h0QP/Ic0D/8pxd//miYf/5omH/+aJh//miYf/5omH/+aJh//mi
        Yf/5omH/+aJh//miYf/5omH/+aJh/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQ
        eP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/q/PgBDejE5FyHNA/8hzQP/2n2D/+aJh//miYf/5omH/+aJh//mi
        Yf/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQ
        eP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/s891Jd6MTkXIc0D/yHNA//afYP/5omH/+aJh//mi
        Yf/5omH/+aJh//miYf/5omH/+aJh//akYv/nrmj/6K1m//ejYf+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQ
        eP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+zz3Ul3oxORchzQP/Ic0D/9p9g//mi
        Yf/5omH/+aJh//miYf/5omH/+aJh//miYf/uqmX/usp1/7HQeP+x0Hj/v8dz/7HQeP+x0Hj/sdB4/7HQ
        eP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7PPdSXejE5FyHNA/8hz
        QP/2n2D/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh/8TEcv+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQ
        eP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/s891Jd6M
        TkXIc0D/yHNA//afYP/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/ts12/7HQeP+x0Hj/sdB4/7HQ
        eP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQ
        eP+zz3Ul3oxORchzQP/Ic0D/9p9g//miYf/5omH/+aJh//miYf/5omH/+aJh//miYf/BxnT/sdB4/7HQ
        eP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQ
        eP+x0Hj/sdB4/7PPdSXejE5FyHNA/8hzQP/2n2D/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh/+it
        Zv+1zXf/sdB4/7HQeP+3y3b/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQ
        eP+x0Hj/sdB4/7HQeP+x0Hj/s891Jd6MTkXIc0D/yHNA//afYP/5omH/+aJh//miYf/5omH/+aJh//mi
        Yf/5omH/+aJh//GnZP/btWr/3bRq//OmYv+x0Hj/sdB4/7HQeP+x0Hj/sdB4/7HQeOux0Xdpsc52NLLQ
        eV2x0HfesdB4/7HQeP+x0Hj/sdB4/7HQeP+zz3Ul3oxORchzQP/Ic0D/9p9g//miYf/5omH/+aJh//mi
        Yf/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh/7HQeP+x0Hj/sdB4/7HQeP+x0Hj6sdB4MQAA
        AAAAAAAAAAAAALHOdhqx0HjusdB4/7HQeP+x0Hj/sdB4/7PPdSXejE5FyHNA/8hzQP/2n2D/+aJh//mi
        Yf/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/sdB4/7HQeP+x0Hj/sdB4/7HQ
        eMIAAAAAAAAAAAAAAAAAAAAAAAAAALDQeJ+x0Hj/sdB4/7HQeP+x0Hj/s891Jd6MTkXIc0D/yHNA//af
        YP/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh//miYf+x0Hj/sdB4/7HQ
        eP+x0Hj/sdF4uwAAAAAAAAAAAAAAAAAAAAAAAAAAsdB4l7HQeP+x0Hj/sdB4/7HQeP+zz3Ul0JBeTMhz
        QP/Ic0D/9p9g//miYf/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh//miYf/5omH/+aJh/7HQ
        eP+x0Hj/sdB4/7HQeP+x0Hj0tc57HwAAAAAAAAAAAAAAALHYdg2x0HjisdB4/7HQeP+x0Hj/sdB4/7PP
        dSVrvtlKcqfE/3KnxP961t//edri/3/X3f/rqG//+aJh//miYf/5omH/3K5+/3rZ4f952uL/edri/3na
        4v962eD/tNJ4IrTSeCK00ngitNJ4IrTSeCKqzHcPAAAAAAAAAAAAAAAAudF0C7TSeCK00ngitNJ4IrTS
        eCK00ngimcxmBVnI8EVNser/TbHq/2Tg9f9m4vb/msvB//miYf/5omH/+aJh//miYf/5omH/hNXY/2bi
        9v9m4vb/ZuL2/2bi9v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWcjwRU2x6v9Nser/ZOD1/2bi9v+lx7b/+aJh//miYf/5omH/+aJh//mi
        Yf+Qz8z/ZuL2/2bi9v9m4vb/ZuL2/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZyPBFTbHq/02x6v9k4PX/ZuL2/37Y3f/2o2T/+aJh//mi
        Yf/5omH/7qds/3De7P9m4vb/ZuL2/2bi9v9m4vb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABtY91LbmLeVgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFnI8EVNser/TbHq/2Tg9f9m4vb/ZuL2/5nM
        wv/up2z/+aJh/+epc/+L0tH/ZuL2/2bi9v9m4vb/ZuL2/2bi9v8A//8BaeH4Imjc8xYAAAAAAAAAAAAA
        AAAAAAAAAAAAAG5j3eNuY933AAD/AQAAAAAAAAAAAAAAAAAAAAAAAAAAWcjwRU2x6v9Nser/ZOD1/2bi
        9v9m4vb/ZuL2/2fi9f9y3On/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9spm4vb/ZuL2/2bj
        9qpg3/8IAAAAAAAAAAAAAAAAbGPcO29k3kUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZyPBFTbHq/02x
        6v9k4PX/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi
        9v9m4vb/ZuL2/2bh9YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFnI
        8EVNser/TbHq/2Tg9f9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi
        9v9m4vb/ZuL2/2bi9v9m4vb/ZeL2xAAAAAAAAAAAAAAAAG9k3Y9tZN6hAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAWcjwRU2x6v9Nser/ZOD1/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi
        9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4/aqAAAAAAAAAAAAAAAAb2Pd8G5j3f9gYN8IAAAAAAAA
        AAAAAAAAAAAAAAAAAABZyPBFTbHq/02x6v9k4PX/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi
        9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/mbi9v9m4vb/ZuL29Gfk9C8AAAAAAAAAAAAAAABuY93xbmPd/25j
        3Xl0XegLAAAAAAAAAAAAAAAAAAAAAFnI8EVNser/TbHq/2Tg9f9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi
        9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9o4fY7ZuL2jmbi9YVj4/gkAAAAAAAAAAAAAAAAAAAAAG5j
        3NZuY93/bmPd/25j3dBmZt0PAAAAAAAAAAAAAAAAWcjwRU2x6v9Nser/ZOD1/2bi9v9m4vb/ZuL2/2bi
        9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAcGDfEG9l3UxtY93UbmPd/29k3Y8AAAAAAAAAAAAAAABayPAzTbHq/02x6v9j3vX/ZuL2/2bi
        9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/AAAAAAAAAAAAAAAAAAAAAAAA
        AABtZNyFbmPdvIBV1QYAAAAAAAAAAHBh2zJuY93/bmPd3AAAAAAAAAAAAAAAAAAAAABQuOz6TbHq/17S
        8v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v8AAAAAAAAAAAAA
        AAAAAAAAAAAAAG1k3c1uY93/b2XdNQAAAAAAAAAAcGDfIG5j3f9uY93eAAAAAAAAAAAAAAAAAAAAAFfH
        7WRPtev9ULbr/2HZ9P9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/2bi9v9m4vb/ZuL2/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAbmLdh25j3f9vYt29bGLiGnNm2RRuY96wbmPd/25i3Z4AAAAAAAAAAAAA
        AAAAAAAAAAAAAFnM8hRXx+1kVsXvc2DX81Jl4fhEZeH4RGXh+ERl4fhEZeH4RGXh+ERl4fhEZeH4RGXh
        +ERl4fhEAAAAAAAAAAAAAAAAAAAAAAAAAABtYdsVbmPd325j3f9uY93/bmPd/25j3f9uY97scV7ZGwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxXtkbbWTeoW5j3OVuY93qbmTcqWtj
        3h8AAAAAAAAAAAAAAAAAAAAAgAAAAYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAOAAAAHwAAAB8AAAAOAAAADgAAA//8AAP//AAD/PwAAHx8AAAc/AAAH/wAABz8AAAcfAAAHDwAA
        DwcAAP8HAAD4x4AA+MeAAPgHwAD4B////A8=
</value>
  </data>
</root>